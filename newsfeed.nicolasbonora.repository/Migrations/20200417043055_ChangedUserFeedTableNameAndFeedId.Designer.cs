// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using newsfeed.nicolasbonora.repository;

namespace newsfeed.nicolasbonora.repository.Migrations
{
    [DbContext(typeof(NewsFeedContext))]
    [Migration("20200417043055_ChangedUserFeedTableNameAndFeedId")]
    partial class ChangedUserFeedTableNameAndFeedId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("newsfeed.nicolasbonora.entities.Feed", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name");

                    b.Property<string>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId")
                        .IsUnique()
                        .HasFilter("[OwnerId] IS NOT NULL");

                    b.ToTable("Feeds");
                });

            modelBuilder.Entity("newsfeed.nicolasbonora.entities.Post", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ContentHeader");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("FeedId");

                    b.HasKey("Id");

                    b.HasIndex("FeedId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("newsfeed.nicolasbonora.entities.Relation_entities.UserFeed", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("FeedId");

                    b.HasKey("UserId", "FeedId");

                    b.HasIndex("FeedId");

                    b.ToTable("UserFeeds");
                });

            modelBuilder.Entity("newsfeed.nicolasbonora.entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("newsfeed.nicolasbonora.entities.Feed", b =>
                {
                    b.HasOne("newsfeed.nicolasbonora.entities.User", "Owner")
                        .WithOne("Feed")
                        .HasForeignKey("newsfeed.nicolasbonora.entities.Feed", "OwnerId");
                });

            modelBuilder.Entity("newsfeed.nicolasbonora.entities.Post", b =>
                {
                    b.HasOne("newsfeed.nicolasbonora.entities.Feed", "Feed")
                        .WithMany("Posts")
                        .HasForeignKey("FeedId");
                });

            modelBuilder.Entity("newsfeed.nicolasbonora.entities.Relation_entities.UserFeed", b =>
                {
                    b.HasOne("newsfeed.nicolasbonora.entities.Feed", "Feed")
                        .WithMany("Subscribers")
                        .HasForeignKey("FeedId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("newsfeed.nicolasbonora.entities.User", "User")
                        .WithMany("FollowingFeeds")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
